-- WHERE 조건절 (연산)
-- ======================================================
SELECT COUNT(*) AS 전체행수, COUNT(COMM), MAX(SAL), MIN(SAL), ROUND(AVG(SAL), 2) 
FROM EMP;

SELECT DEPTNO, AVG(SAL) 
FROM EMP
GROUP BY DEPTNO;

SELECT COUNT(*) AS 전체행수, COUNT(COMM), MAX(SAL), MIN(SAL), ROUND(AVG(SAL), 2) 
FROM EMP
GROUP BY DEPTNO;

SELECT COUNT(*) AS 전체행수, COUNT(COMM), MAX(SAL), MIN(SAL), ROUND(AVG(SAL), 2) 
FROM EMP
GROUP BY DEPTNO
HAVING MIN(SAL) >= 900;

SELECT COUNT(*) AS 전체행수, COUNT(COMM), MAX(SAL), MIN(SAL), ROUND(AVG(SAL), 2) 
FROM EMP
HAVING MIN(SAL) >= 900
GROUP BY DEPTNO;

SELECT ENAME AS 사원명, DEPTNO AS 부서번호 
	 , EXTRACT(MONTH FROM HIREDATE) AS 입사월
	 , SAL AS 급여 
FROM EMP;

SELECT ENAME AS 사원명, DEPTNO AS 부서번호
	 , CASE MONTH WHEN 1 THEN SAL END AS M01
	 , CASE MONTH WHEN 2 THEN SAL END AS M02
	 , CASE MONTH WHEN 3 THEN SAL END AS M03
	 , CASE MONTH WHEN 4 THEN SAL END AS M04
	 , CASE MONTH WHEN 5 THEN SAL END AS M05
	 , CASE MONTH WHEN 6 THEN SAL END AS M06
	 , CASE MONTH WHEN 7 THEN SAL END AS M07
	 , CASE MONTH WHEN 8 THEN SAL END AS M08
	 , CASE MONTH WHEN 9 THEN SAL END AS M09
	 , CASE MONTH WHEN 10 THEN SAL END AS M10
	 , CASE MONTH WHEN 11 THEN SAL END AS M11
	 , CASE MONTH WHEN 12 THEN SAL END AS M12
FROM (SELECT ENAME, DEPTNO, EXTRACT(MONTH FROM HIREDATE) AS MONTH, SAL FROM EMP);

SELECT DEPTNO AS 부서번호
	 , AVG(CASE MONTH WHEN 1 THEN SAL END) AS M01
	 , AVG(CASE MONTH WHEN 2 THEN SAL END) AS M02
	 , AVG(CASE MONTH WHEN 3 THEN SAL END) AS M03
	 , AVG(CASE MONTH WHEN 4 THEN SAL END) AS M04
	 , AVG(CASE MONTH WHEN 5 THEN SAL END) AS M05
	 , AVG(CASE MONTH WHEN 6 THEN SAL END) AS M06
	 , AVG(CASE MONTH WHEN 7 THEN SAL END) AS M07
	 , AVG(CASE MONTH WHEN 8 THEN SAL END) AS M08
	 , AVG(CASE MONTH WHEN 9 THEN SAL END) AS M09
	 , AVG(CASE MONTH WHEN 10 THEN SAL END) AS M10
	 , AVG(CASE MONTH WHEN 11 THEN SAL END) AS M11
	 , AVG(CASE MONTH WHEN 12 THEN SAL END) AS M12
FROM (SELECT ENAME, DEPTNO, EXTRACT(MONTH FROM HIREDATE) AS MONTH, SAL FROM EMP)
GROUP BY DEPTNO;

SELECT DEPTNO AS 부서번호
	 , AVG(DECODE(MONTH, 1, SAL)) AS M01
	 , AVG(DECODE(MONTH, 2, SAL)) AS M02
	 , AVG(DECODE(MONTH, 3, SAL)) AS M03
	 , AVG(DECODE(MONTH, 4, SAL)) AS M04
	 , AVG(DECODE(MONTH, 5, SAL)) AS M05
	 , AVG(DECODE(MONTH, 6, SAL)) AS M06
	 , AVG(DECODE(MONTH, 7, SAL)) AS M07
	 , AVG(DECODE(MONTH, 8, SAL)) AS M08
	 , AVG(DECODE(MONTH, 9, SAL)) AS M09
	 , AVG(DECODE(MONTH, 10, SAL)) AS M10
	 , AVG(DECODE(MONTH, 11, SAL)) AS M11
	 , AVG(DECODE(MONTH, 12, SAL)) AS M12
FROM (SELECT ENAME, DEPTNO, EXTRACT(MONTH FROM HIREDATE) AS MONTH, SAL FROM EMP)
GROUP BY DEPTNO;

SELECT * FROM EMP;

SELECT D.DNAME
	 , NVL (SUM (CASE JOB WHEN 'CLERK' THEN 1 ELSE 0 END), 0) AS CLERK
	 , NVL (SUM (CASE JOB WHEN 'SALESMAN' THEN 1 ELSE 0 END), 0) AS SALESMAN
	 , NVL (SUM (CASE JOB WHEN 'MANAGER' THEN 1 ELSE 0 END), 0) AS MANAGER
	 , NVL (SUM (CASE JOB WHEN 'ANALYST' THEN 1 ELSE 0 END), 0) AS ANALYST
	 , COUNT(*) AS SUM
FROM EMP E INNER JOIN DEPT D
ON (E.DEPTNO = D.DEPTNO)
GROUP BY D.DNAME;

SELECT D.DNAME
	 , NVL (SUM (CASE JOB WHEN 'CLERK' THEN 1 END), 0) AS CLERK
	 , NVL (SUM (CASE JOB WHEN 'SALESMAN' THEN 1 END), 0) AS SALESMAN
	 , NVL (SUM (CASE JOB WHEN 'MANAGER' THEN 1 END), 0) AS MANAGER
	 , NVL (SUM (CASE JOB WHEN 'ANALYST' THEN 1 END), 0) AS ANALYST
	 , NVL (SUM (CASE JOB WHEN 'PRESIDENT' THEN 1 END), 0) AS PRESIDENT
	 , COUNT(*) AS SUM
FROM EMP E INNER JOIN DEPT D
ON (E.DEPTNO = D.DEPTNO)
GROUP BY D.DNAME;

SELECT D.DNAME
	 , NVL (SUM (CASE WHEN JOB = 'CLERK' THEN 1 END), 0) AS CLERK
	 , NVL (SUM (CASE WHEN JOB = 'SALESMAN' THEN 1 END), 0) AS SALESMAN
	 , NVL (SUM (CASE WHEN JOB = 'MANAGER' THEN 1 END), 0) AS MANAGER
	 , NVL (SUM (CASE WHEN JOB = 'ANALYST' THEN 1 END), 0) AS ANALYST
	 , NVL (SUM (CASE WHEN JOB = 'PRESIDENT' THEN 1 END), 0) AS PRESIDENT
	 , COUNT(*) AS SUM
FROM EMP E INNER JOIN DEPT D
ON (E.DEPTNO = D.DEPTNO)
GROUP BY D.DNAME;

SELECT EMPNO
FROM (SELECT EMPNO, ENAME FROM EMP ORDER BY MGR);

--SELECT MGR 
--FROM (SELECT EMPNO, ENAME FROM EMP ORDER BY MGR);

SELECT JOB, SAL
FROM EMP 
GROUP BY JOB 
HAVING COUNT(*) > 0
ORDER BY SAL;

SELECT JOB, SUM(SAL) AS SALARY_SUM
FROM EMP 
GROUP BY JOB 
HAVING SUM(SAL) > 5000
ORDER BY SUM(SAL);