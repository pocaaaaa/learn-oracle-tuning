-- [DML]
SELECT * FROM PLAYER;

-- 1. INSERT
INSERT INTO PLAYER(PLAYER_ID, PLAYER_NAME, TEAM_ID, POSITION, HEIGHT, WEIGHT, BACK_NO)
VALUES ('20240118', 'TEST', 'K07', 'MF', 178, 73, 7);

INSERT
INTO PLAYER
VALUES ('20240119', 'TEST2', 'K07', '', 'BlueDragon', '2002', 'MF', '17', NULL, NULL, 1, 189, 69);

INSERT
INTO PLAYER
VALUES ((SELECT TO_CHAR(MAX (TO_NUMBER (PLAYER_ID)) + 1) FROM PLAYER), '홍길동', 'K06');

INSERT INTO
INTO TEAM(TEAM_ID, REGION_NAME, TEAM_NAME, ORIG_YYYY, STADIUM_ID)
SELECT REPLACE(TEAM_ID, 'K', 'A') AS TEAM_ID
	 , REGION_NAME, REGION_NAME || '올스타' AS TEAM_NAME
	 , 2019 AS ORIG_YYYY, STADIUM_ID
FROM TEAM
WHERE REGION_NAME IN ('성남', '인천');

INSERT
INTO PLAYER (PLAYER_ID, PLAYER_NAME, TEAM_ID, POSITION)
SELECT 'A' || SUBSTR(PLAYER_ID, 2) AS PLAYER_ID, PLAYER_NAME
	 , REPLACE(TEAM_ID, 'K', 'A') AS TEAM_ID, POSITION
FROM PLAYER
WHERE TEAM_ID IN ('K04', 'K08');

-- 2. UPDATE
UPDATE PLAYER
SET BACK_NO = 99;
UPDATE PLAYER
SET POSITION = 'MF'
WHERE POSITION IS NULL;

UPDATE TEAM A
SET A.ADDRESS = (SELECT X.ADDRESS
				 FROM STADIUM X
				 WHERE X.HOMETEAM_ID = A.TEAM_ID)
WHERE A.ORIG_YYYY > 2000;

UPDATE STADIUM A
SET (A.DDD, A.TEL) = (SELECT X.DDD, X.TEL
					  FROM TEAM X
					  WHERE X.TEAM_ID = A.HOMETEAM_ID);
					 
UPDATE STADIUM A
SET (A.DDD, A.TEL) = (SELECT X.DDD, X.TEL
					  FROM TEAM X
					  WHERE X.TEAM_ID = A.HOMETEAM_ID)
WHERE EXISTS (SELECT 1
			  FROM TEAM X
			  WHERE X.TEAM_ID = A.HOMETEAM_ID);
			 
MERGE
	INTO STADIUM T
USING TEAM S
	ON (T.TEAM = S.HOMETEAM_ID)
WHEN MATCHED THEN
	UPDATE
		SET T.DDD = S.DDD
		  , T.TEL = S.TEL;
		 
-- 3. DELETE
DELETE FROM PLAYER;
DELETE PLAYER
WHERE POSITION = 'DF'
AND JOIN_YYYY < 2010;

DELETE PLAYER A
WHERE EXISTS (SELECT 1
			  FROM TEAM X
			  WHERE X.TEAM_ID = A.TEAM_ID
			  AND X.ORIG_YYYY < 1900);
			 
DELETE PLAYER
WHERE TEAM_ID IN (SELECT TEAM_ID
				  FROM PLAYER
				  GROUP BY TEAM_ID
				  HAVING COUNT(*) <= 10);
				 
-- 4. MERGE
CREATE TABLE TEMP_TMP AS
SELECT NVL(B.TEAM, 'K' ||
			ROW_NUMBER() OVER (ORDER BY B.TEAM_ID, A.STADIUM_ID)) AS TEAM_ID
	 , SUBSTR(A.STADIUM_NAME, 1, 2) AS REGION_NAME
	 , SUBSTR(A.STADIUM_NAME, 1, 2)
	 || NVL2(B.TEAM_NAME, 'FC', '시티즌') AS TEAM_NAME
	 , A.STADIUM_ID, A.DDD, A.TEL
FROM STADIUM A, TEAM B
WHERE B.STADIUM_ID(+) = A.STADIUM_ID;

MERGE
	INTO TEAM T
USING TEAM_TMP S
	ON (T.TEAM_ID = S.TEAM_ID)
WHEN MATCH THEN
	USING
		SET T.REGION_NAME = S.REGION_NAME
		  , T.TEAM_NAME = S.TEAM_NAME
		  , T.DDD = S.DDD
		  , T.TEL = S.TEL
WHEN NOT MATCH THEN
	INSERT (T.TEAM_ID, T.REGION_NAME, T.TEAM_NAME, T.STADIUM_ID, T.DDD, T.TEL)
	VALUES (S.TEAM_ID, S.REGION_NAME, S.TEAM_NAME, S.STADIUM_ID, S.DDD, S.TEL);

MERGE
	INTO TEAM T
USING (SELECT * FROM TEAM_TMP WHERE REGION_NAME IN ('성남', '부산', '대구', '전주')) S
	ON (T.TEAM_ID = S.TEAM_ID)
WHEN MATCH THEN
	USING
		SET T.REGION_NAME = S.REGION_NAME
		  , T.TEAM_NAME = S.TEAM_NAME
		  , T.DDD = S.DDD
		  , T.TEL = S.TEL
WHEN NOT MATCH THEN
	INSERT (T.TEAM_ID, T.REGION_NAME, T.TEAM_NAME, T.STADIUM_ID, T.DDD, T.TEL)
	VALUES (S.TEAM_ID, S.REGION_NAME, S.TEAM_NAME, S.STADIUM_ID, S.DDD, S.TEL);

MERGE
	INTO TEAM T
USING TEAM_TMP S
	ON (T.TEAM_ID = S.TEAM_ID)
WHEN MATCH THEN
	USING
		SET T.REGION_NAME = S.REGION_NAME
		  , T.TEAM_NAME = S.TEAM_NAME
		  , T.DDD = S.DDD
		  , T.TEL = S.TEL;

MERGE
	INTO TEAM T
USING TEAM_TMP S
	ON (T.TEAM_ID = S.TEAM_ID)
WHEN NOT MATCH THEN
	INSERT (T.TEAM_ID, T.REGION_NAME, T.TEAM_NAME, T.STADIUM_ID, T.DDD, T.TEL)
	VALUES (S.TEAM_ID, S.REGION_NAME, S.TEAM_NAME, S.STADIUM_ID, S.DDD, S.TEL);


-- ====================================================================
-- ====================================================================
DESCRIBE PLAYER;

CREATE TABLE TEAM_TEMP AS SELECT * FROM TEAM;

DESC TEAM_TEMP;

ALTER TABLE PLAYER ADD (ADDRESS VARCHAR2(80));
ALTER TABLE PLAYER DROP (ADDESS);

ALTER TABLE TEAM_TEMP MODIFY (ORIG_YYYY VARCHAR2(8) DEFAULT '20020129' NOT NULL);

ALTER TABLE PLAYER RENAME COLUMN PLAYER_ID TO TEMP_ID;
ALTER TABLE PLAYER RENAME COLUMN TEMP_ID TO PLAYER_ID;

ALTER TABLE PLAYER DROP CONSTRAINT PLAYER_FK;

ALTER TABLE PLAYER ADD CONSTRAINT PLAYER_FK FOREIGN KEY (TEAM_ID) REFERENCES TEAM(TEAM_ID);

DROP TABLE TEAM;

RENAME TEAM TO TEAM_BACKUP;
RENAME TEAM_BACKUP TO TEAM;

TRUNCATE TABLE TEAM;